{"ast":null,"code":"import { ENDPOINTS } from '../endpoints';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nfunction InfoComponent_a_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 12)(1, \"button\", 13);\n    i0.ɵɵtext(2, \" Update \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class InfoComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.info = {\n      email: 'test@gmail.com',\n      password: '1234'\n    };\n    this.token = undefined;\n    this.isLoggedIn = false;\n    this.isLoggedIn = this.authService.isLoggedIn;\n  }\n  ngOnInit() {\n    this.geToken();\n    this.token = localStorage.getItem('token');\n  }\n  // get token from api if needed\n  geToken() {\n    this.http.get(ENDPOINTS.info).subscribe({\n      next: res => {\n        this.info = res[0];\n      },\n      error: () => {\n        alert('Something went wrong');\n      }\n    });\n  }\n  logout() {\n    this.authService.logout();\n  }\n  static #_ = this.ɵfac = function InfoComponent_Factory(t) {\n    return new (t || InfoComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoComponent,\n    selectors: [[\"app-info\"]],\n    decls: 32,\n    vars: 10,\n    consts: [[1, \"w-full\", \"flex\", \"justify-center\", \"items-center\"], [1, \"w-3/4\", \"mx-auto\", \"text-center\"], [1, \"text-3xl\", \"font-bold\", \"mb-8\"], [1, \"flex\", \"justify-center\"], [1, \"bg-gray-200\", \"w-1/3\", \"p-4\", \"border\", \"border-gray-400\", \"rounded-l-lg\"], [1, \"text-lg\", \"font-semibold\", \"text-gray-800\"], [1, \"bg-gray-300\", \"w-2/3\", \"p-4\", \"border\", \"border-gray-400\", \"rounded-r-lg\"], [1, \"text-lg\", \"text-gray-800\"], [1, \"flex\", \"justify-center\", \"mt-4\"], [1, \"flex\", \"justify-center\", \"mt-8\"], [1, \"w-1/2\"], [\"class\", \"m-2\", \"href\", \"/update\", 4, \"ngIf\"], [\"href\", \"/update\", 1, \"m-2\"], [1, \"py-3\", \"px-6\", \"bg-blue-500\", \"text-white\", \"rounded-lg\", \"hover:bg-blue-600\", \"transition\", \"duration-300\"]],\n    template: function InfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Token Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerStart(4);\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"span\", 5);\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"span\", 7);\n        i0.ɵɵtext(11);\n        i0.ɵɵpipe(12, \"titlecase\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 4)(15, \"span\", 5);\n        i0.ɵɵtext(16, \"Circulating Supply\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"span\", 7);\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"number\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 8)(22, \"div\", 4)(23, \"span\", 5);\n        i0.ɵɵtext(24, \"Total Supply\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 6)(26, \"span\", 7);\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"number\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10);\n        i0.ɵɵtemplate(31, InfoComponent_a_31_Template, 3, 0, \"a\", 11);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 4, ctx.info.name));\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 6, ctx.info.circulatingSupply));\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(28, 8, ctx.info.totalSupply));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      }\n    },\n    dependencies: [i3.NgIf, i3.DecimalPipe, i3.TitleCasePipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmZvLmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5mby9pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxnS0FBZ0siLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,QAAQ,cAAc;;;;;;;ICkChCC,6BAAiD;IAE7CA,wBACF;IAAAA,iBAAS;;;AD7BnB,OAAM,MAAOC,aAAa;EAIxBC,YACmBC,IAAgB,EAChBC,WAAkC;IADlC,SAAI,GAAJD,IAAI;IACJ,gBAAW,GAAXC,WAAW;IAL9B,SAAI,GAAQ;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,QAAQ,EAAE;IAAM,CAAE;IACzD,UAAK,GAAQC,SAAS;IACtB,eAAU,GAAG,KAAK;IAKhB,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACI,UAAU;EAC/C;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC5C;EAEA;EACAH,OAAO;IACL,IAAI,CAACP,IAAI,CAACW,GAAG,CAACf,SAAS,CAACgB,IAAI,CAAC,CAACC,SAAS,CAAC;MACtCC,IAAI,EAAGC,GAAQ,IAAI;QACjB,IAAI,CAACH,IAAI,GAAGG,GAAG,CAAC,CAAC,CAAC;MACpB,CAAC;MACDC,KAAK,EAAE,MAAK;QACVC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;KACD,CAAC;EACJ;EACAC,MAAM;IACJ,IAAI,CAACjB,WAAW,CAACiB,MAAM,EAAE;EAC3B;EAAC;qBA7BUpB,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCV1B1B,8BAAqD;QAEbA,iCAAiB;QAAAA,iBAAK;QAC1DA,6BAAc;QAEZA,8BAAiC;QAEqBA,oBAAI;QAAAA,iBAAO;QAE/DA,8BAAuE;QACjCA,aAA2B;;QAAAA,iBAAO;QAI1EA,+BAAsC;QAEgBA,mCAAkB;QAAAA,iBAAO;QAE7EA,+BAAuE;QACjCA,aAAqC;;QAAAA,iBAAO;QAIpFA,+BAAsC;QAEgBA,6BAAY;QAAAA,iBAAO;QAEvEA,+BAAuE;QACjCA,aAA+B;;QAAAA,iBAAO;QAGhFA,0BAAe;QAGfA,+BAAsC;QAElCA,6DAII;QACNA,iBAAM;;;QA/BkCA,gBAA2B;QAA3BA,0DAA2B;QAS3BA,eAAqC;QAArCA,uEAAqC;QASrCA,eAA+B;QAA/BA,iEAA+B;QAQjEA,eAAgB;QAAhBA,qCAAgB","names":["ENDPOINTS","i0","InfoComponent","constructor","http","authService","email","password","undefined","isLoggedIn","ngOnInit","geToken","token","localStorage","getItem","get","info","subscribe","next","res","error","alert","logout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/mesi/Tinsae/Angular/angular front/src/app/info/info.component.ts","/home/mesi/Tinsae/Angular/angular front/src/app/info/info.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ENDPOINTS } from '../endpoints';\nimport { AuthenticationService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss'],\n})\nexport class InfoComponent implements OnInit {\n  info: any = { email: 'test@gmail.com', password: '1234' };\n  token: any = undefined;\n  isLoggedIn = false;\n  constructor(\n    private readonly http: HttpClient,\n    private readonly authService: AuthenticationService\n  ) {\n    this.isLoggedIn = this.authService.isLoggedIn;\n  }\n\n  ngOnInit(): void {\n    this.geToken();\n    this.token = localStorage.getItem('token');\n  }\n\n  // get token from api if needed\n  geToken() {\n    this.http.get(ENDPOINTS.info).subscribe({\n      next: (res: any) => {\n        this.info = res[0];\n      },\n      error: () => {\n        alert('Something went wrong');\n      },\n    });\n  }\n  logout() {\n    this.authService.logout();\n  }\n}\n","<div class=\"w-full flex justify-center items-center\">\n  <div class=\"w-3/4 mx-auto text-center\">\n    <h2 class=\"text-3xl font-bold mb-8\">Token Information</h2>\n    <ng-container>\n      <!-- info -->\n      <div class=\"flex justify-center\">\n        <div class=\"bg-gray-200 w-1/3 p-4 border border-gray-400 rounded-l-lg\">\n          <span class=\"text-lg font-semibold text-gray-800\">Name</span>\n        </div>\n        <div class=\"bg-gray-300 w-2/3 p-4 border border-gray-400 rounded-r-lg\">\n          <span class=\"text-lg text-gray-800\">{{ info.name | titlecase }}</span>\n        </div>\n      </div>\n      <!-- circulating supply -->\n      <div class=\"flex justify-center mt-4\">\n        <div class=\"bg-gray-200 w-1/3 p-4 border border-gray-400 rounded-l-lg\">\n          <span class=\"text-lg font-semibold text-gray-800\">Circulating Supply</span>\n        </div>\n        <div class=\"bg-gray-300 w-2/3 p-4 border border-gray-400 rounded-r-lg\">\n          <span class=\"text-lg text-gray-800\">{{ info.circulatingSupply | number }}</span>\n        </div>\n      </div>\n      <!-- total supply -->\n      <div class=\"flex justify-center mt-4\">\n        <div class=\"bg-gray-200 w-1/3 p-4 border border-gray-400 rounded-l-lg\">\n          <span class=\"text-lg font-semibold text-gray-800\">Total Supply</span>\n        </div>\n        <div class=\"bg-gray-300 w-2/3 p-4 border border-gray-400 rounded-r-lg\">\n          <span class=\"text-lg text-gray-800\">{{ info.totalSupply | number }}</span>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- validation for logged in users only -->\n    <div class=\"flex justify-center mt-8\">\n      <div class=\"w-1/2\">\n        <a *ngIf=\"isLoggedIn\" class=\"m-2\" href=\"/update\">\n          <button class=\"py-3 px-6 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition duration-300\">\n            Update\n          </button>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}