{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  constructor() {\n    this.currentUserSubject = new BehaviorSubject(localStorage.getItem('token') ? JSON.parse(localStorage.getItem('token') ?? '') : null);\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n  get currentUserValue() {\n    return this.currentUserSubject.value;\n  }\n  get isLoggedIn() {\n    console.log(this.currentUserValue);\n    return this.currentUserValue ? true : false;\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  static #_ = this.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAGlD,OAAM,MAAOC,qBAAqB;EAGhCC;IACE,IAAI,CAACC,kBAAkB,GAAG,IAAIH,eAAe,CAC3CI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GACzBC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,GAC/C,IAAI,CACT;IAED,IAAI,CAACG,WAAW,GAAG,IAAI,CAACL,kBAAkB,CAACM,YAAY,EAAE;EAC3D;EACA,IAAWC,gBAAgB;IACzB,OAAO,IAAI,CAACP,kBAAkB,CAACQ,KAAK;EACtC;EAEA,IAAWC,UAAU;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,gBAAgB,CAAC;IAClC,OAAO,IAAI,CAACA,gBAAgB,GAAG,IAAI,GAAG,KAAK;EAC7C;EACAK,MAAM;IACJX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAClC;EAAC;qBAtBUf,qBAAqB;EAAA;EAAA;WAArBA,qBAAqB;IAAAgB,SAArBhB,qBAAqB;IAAAiB,YADR;EAAM","names":["BehaviorSubject","AuthenticationService","constructor","currentUserSubject","localStorage","getItem","JSON","parse","currentUser","asObservable","currentUserValue","value","isLoggedIn","console","log","logout","removeItem","factory","providedIn"],"sourceRoot":"","sources":["/home/mesi/Tinsae/Angular/angular front/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  public currentUser: Observable<any>;\r\n  private currentUserSubject: BehaviorSubject<any>;\r\n  constructor() {\r\n    this.currentUserSubject = new BehaviorSubject<any>(\r\n      localStorage.getItem('token')\r\n        ? JSON.parse(localStorage.getItem('token') ?? '')\r\n        : null\r\n    );\r\n\r\n    this.currentUser = this.currentUserSubject.asObservable();\r\n  }\r\n  public get currentUserValue(): any {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  public get isLoggedIn(): boolean {\r\n    console.log(this.currentUserValue);\r\n    return this.currentUserValue ? true : false;\r\n  }\r\n  logout() {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}