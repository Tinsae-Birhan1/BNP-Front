{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ENDPOINTS } from '../endpoints';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(fb, http, router) {\n    this.fb = fb;\n    this.http = http;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.http.post(ENDPOINTS.login, this.loginForm.value).subscribe({\n      next: res => {\n        // put token in local storage\n        localStorage.setItem('token', JSON.stringify(res));\n        console.log('ok');\n        this.router.navigate(['/info']);\n      },\n      error: err => {\n        alert('something went wrong');\n      }\n    });\n    console.log(this.loginForm.value);\n  }\n  onRegister() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.http.post(ENDPOINTS.register, this.loginForm.value).subscribe({\n      next: res => {\n        // put token in local storage\n        localStorage.setItem('token', JSON.stringify(res));\n        this.router.navigate(['/info']);\n        console.log('ok');\n      },\n      error: err => {\n        alert('something went wrong');\n      }\n    });\n    console.log(this.loginForm.value);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"flex\", \"justify-center\", \"items-center\", \"h-screen\", \"bg-gradient-to-br\", \"from-blue-200\", \"to-purple-200\"], [1, \"w-2/6\", \"mx-auto\", \"bg-white\", \"rounded-lg\", \"shadow-lg\", \"p-8\"], [1, \"text-3xl\", \"font-bold\", \"text-center\", \"mb-8\"], [1, \"text-gray-900\", 3, \"formGroup\"], [1, \"my-4\"], [\"for\", \"email\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\"], [\"formControlName\", \"email\", \"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter your email\", 1, \"bg-gray-100\", \"border\", \"border-gray-300\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [\"class\", \"text-red-500 mt-1\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"block\", \"mb-2\", \"text-sm\", \"font-medium\"], [\"formControlName\", \"password\", \"type\", \"password\", \"id\", \"password\", \"placeholder\", \"Enter your password\", 1, \"bg-gray-100\", \"border\", \"border-gray-300\", \"text-sm\", \"rounded-lg\", \"focus:ring-blue-500\", \"focus:border-blue-500\", \"block\", \"w-full\", \"p-2.5\"], [1, \"flex\", \"justify-center\", \"mt-8\"], [1, \"py-3\", \"px-6\", \"bg-blue-500\", \"text-white\", \"rounded-lg\", \"hover:bg-blue-600\", \"transition\", \"duration-300\", \"mr-4\", 3, \"click\"], [1, \"py-3\", \"px-6\", \"bg-blue-300\", \"text-white\", \"rounded-lg\", \"hover:bg-blue-400\", \"transition\", \"duration-300\", 3, \"click\"], [1, \"text-red-500\", \"mt-1\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3)(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 8);\n        i0.ɵɵtext(12, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n          return ctx.onRegister();\n        });\n        i0.ɵɵtext(16, \" Register \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_17_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵtext(18, \" Login \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").errors);\n      }\n    },\n    dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdLQUFnSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AACnE,SAASC,SAAS,QAAQ,cAAc;;;;;;;;ICQhCC,+BAAuG;IACrGA,4CACF;IAAAA,iBAAM;;;ADFd,OAAM,MAAOC,cAAc;EAEzBC,YACmBC,EAAe,EAEfC,IAAgB,EAChBC,MAAc;IAHd,OAAE,GAAFF,EAAE;IAEF,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IAEvB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACU,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACW,QAAQ;KACnC,CAAC;EACJ;EAEAE,OAAO;IACL,IAAI,IAAI,CAACL,SAAS,CAACM,OAAO,EAAE;MAC1B;;IAEF,IAAI,CAACR,IAAI,CAACS,IAAI,CAACd,SAAS,CAACe,KAAK,EAAE,IAAI,CAACR,SAAS,CAACS,KAAK,CAAC,CAACC,SAAS,CAAC;MAC9DC,IAAI,EAAGC,GAAG,IAAI;QACZ;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAAC;QAClDK,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;QACjB,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MACjC,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACbC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;KACD,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,SAAS,CAACS,KAAK,CAAC;EACnC;EAEAc,UAAU;IACR,IAAI,IAAI,CAACvB,SAAS,CAACM,OAAO,EAAE;MAC1B;;IAEF,IAAI,CAACR,IAAI,CAACS,IAAI,CAACd,SAAS,CAAC+B,QAAQ,EAAE,IAAI,CAACxB,SAAS,CAACS,KAAK,CAAC,CAACC,SAAS,CAAC;MACjEC,IAAI,EAAGC,GAAG,IAAI;QACZ;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAAC;QAClD,IAAI,CAACb,MAAM,CAACoB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAC/BF,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;MACnB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,KAAK,CAAC,sBAAsB,CAAC;MAC/B;KACD,CAAC;IACFL,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,SAAS,CAACS,KAAK,CAAC;EACnC;EAAC;qBAhDUd,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA8B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCX3BnC,8BAAqG;QAEjDA,qBAAK;QAAAA,iBAAK;QAE1DA,+BAAoD;QAGUA,qBAAK;QAAAA,iBAAQ;QACvEA,2BAEmC;QACnCA,+DAEM;QACRA,iBAAM;QAENA,+BAAkB;QAC6CA,yBAAQ;QAAAA,iBAAQ;QAC7EA,4BAEsC;QACxCA,iBAAM;QAENA,gCAAsC;QAElCA;UAAA,OAASoC,gBAAY;QAAA,EAAC;QACtBpC,2BACF;QAAAA,iBAAS;QAETA,mCACsB;QAApBA;UAAA,OAASoC,aAAS;QAAA,EAAC;QACnBpC,wBACF;QAAAA,iBAAS;;;QA5BPA,eAAuB;QAAvBA,yCAAuB;QAOnBA,eAAqE;QAArEA,8FAAqE","names":["Validators","ENDPOINTS","i0","LoginComponent","constructor","fb","http","router","loginForm","group","email","required","password","onLogin","invalid","post","login","value","subscribe","next","res","localStorage","setItem","JSON","stringify","console","log","navigate","error","err","alert","onRegister","register","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/mesi/Tinsae/Angular/angular front/src/app/login/login.component.ts","/home/mesi/Tinsae/Angular/angular front/src/app/login/login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ENDPOINTS } from '../endpoints';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginForm!: FormGroup;\n  constructor(\n    private readonly fb: FormBuilder,\n\n    private readonly http: HttpClient,\n    private readonly router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  onLogin() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.http.post(ENDPOINTS.login, this.loginForm.value).subscribe({\n      next: (res) => {\n        // put token in local storage\n        localStorage.setItem('token', JSON.stringify(res));\n        console.log('ok');\n        this.router.navigate(['/info']);\n      },\n      error: (err) => {\n        alert('something went wrong');\n      },\n    });\n    console.log(this.loginForm.value);\n  }\n\n  onRegister() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.http.post(ENDPOINTS.register, this.loginForm.value).subscribe({\n      next: (res) => {\n        // put token in local storage\n        localStorage.setItem('token', JSON.stringify(res));\n        this.router.navigate(['/info']);\n        console.log('ok');\n      },\n      error: (err) => {\n        alert('something went wrong');\n      },\n    });\n    console.log(this.loginForm.value);\n  }\n}\n","<div class=\"flex justify-center items-center h-screen bg-gradient-to-br from-blue-200 to-purple-200\">\n  <div class=\"w-2/6 mx-auto bg-white rounded-lg shadow-lg p-8\">\n    <h1 class=\"text-3xl font-bold text-center mb-8\">Login</h1>\n\n    <form [formGroup]=\"loginForm\" class=\"text-gray-900\">\n      <!-- email input field -->\n      <div class=\"my-4\">\n        <label for=\"email\" class=\"block mb-2 text-sm font-medium\">Email</label>\n        <input formControlName=\"email\" type=\"email\" id=\"email\"\n          class=\"bg-gray-100 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          placeholder=\"Enter your email\" />\n        <div *ngIf=\"loginForm.get('email').touched && loginForm.get('email').errors\" class=\"text-red-500 mt-1\">\n          Please enter a valid email\n        </div>\n      </div>\n      <!-- password -->\n      <div class=\"my-4\">\n        <label for=\"password\" class=\"block mb-2 text-sm font-medium\">Password</label>\n        <input formControlName=\"password\" type=\"password\" id=\"password\"\n          class=\"bg-gray-100 border border-gray-300 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"\n          placeholder=\"Enter your password\" />\n      </div>\n      <!-- login button -->\n      <div class=\"flex justify-center mt-8\">\n        <button class=\"py-3 px-6 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition duration-300 mr-4\"\n          (click)=\"onRegister()\">\n          Register\n        </button>\n\n        <button class=\"py-3 px-6 bg-blue-300 text-white rounded-lg hover:bg-blue-400 transition duration-300\"\n          (click)=\"onLogin()\">\n          Login\n        </button>\n      </div>\n    </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}